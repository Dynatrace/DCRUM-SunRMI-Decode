--[[
Copyright Â© 2015 Dynatrace LLC. 
All rights reserved. 
Unpublished rights reserved under the Copyright Laws of the United States.

U.S. GOVERNMENT RIGHTS-Use, duplication, or disclosure by the U.S. Government is
subject to restrictions as set forth in Dynatrace LLC license agreement and as
provided in DFARS 227.7202-1(a) and 227.7202-3(a) (1995), DFARS
252.227-7013(c)(1)(ii) (OCT 1988), FAR 12.212 (a) (1995), FAR 52.227-19, 
or FAR 52.227-14 (ALT III), as applicable.

This product contains confidential information and trade secrets of Dynatrace LLC. 
Disclosure is prohibited without the prior express written permission of Dynatrace LLC. 
Use of this product is subject to the terms and conditions of the user's License Agreement with Dynatrace LLC.
See the license agreement text online at https://community.dynatrace.com/community/download/attachments/5144912/dynaTraceBSD.txt?version=3&modificationDate=1441261477160&api=v2
--]]

--[[

Java Sun RMI parsing script test

]]--

Stats = require 'stats'
local sunrmi = require 'sunrmi'
local lunit = require 'lunit'

module( "sunmi_test", lunit.testcase, package.seeall )

function HexDumpString(str)
	return (
		string.gsub(str,"(.)",
			function (c)
				return string.format("%02X%s",string.byte(c), "")
			end
		)
	)
end

function checkRequest(discovered, reference)
	for i = 1, discovered:len() do
		assert(discovered:byte(i) == reference[i], "Incorrect hash value")
	end
	return true;
end

function test1_sun_request()
	local payload_arr = {
	0x50, 0xac, 0xed, 0x00, 0x05, 0x77, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0xf6, 0xb6, 0x89, 0x8d, 0x8b, 0xf2, 0x86, 0x43, 0x75, 0x72, 0x00, 0x18, 0x5b, 0x4c, 0x6a,
	0x61, 0x76, 0x61, 0x2e, 0x72, 0x6d, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f,
	0x62, 0x6a, 0x49, 0x44, 0x3b, 0x87, 0x13, 0x00, 0xb8, 0xd0, 0x2c, 0x64, 0x7e, 0x02, 0x00, 0x00,
	0x70, 0x78, 0x70, 0x00, 0x00, 0x00, 0x01, 0x73, 0x72, 0x00, 0x15, 0x6a, 0x61, 0x76, 0x61, 0x2e,
	0x72, 0x6d, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x49, 0x44,
	0xa7, 0x5e, 0xfa, 0x12, 0x8d, 0xdc, 0xe5, 0x5c, 0x02, 0x00, 0x02, 0x4a, 0x00, 0x06, 0x6f, 0x62,
	0x6a, 0x4e, 0x75, 0x6d, 0x4c, 0x00, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x00, 0x15, 0x4c,
	0x6a, 0x61, 0x76, 0x61, 0x2f, 0x72, 0x6d, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x55, 0x49, 0x44, 0x3b, 0x70, 0x78, 0x70, 0x0e, 0x6d, 0x8c, 0xd3, 0xca, 0x2e, 0xa5, 0x2a, 0x73,
	0x72, 0x00, 0x13, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x72, 0x6d, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x55, 0x49, 0x44, 0x0f, 0x12, 0x70, 0x0d, 0xbf, 0x36, 0x4f, 0x12, 0x02, 0x00,
	0x03, 0x53, 0x00, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x00, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x00, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x70, 0x78, 0x70, 0x80, 0x02, 0x00, 0x00,
	0x01, 0x3e, 0x88, 0x88, 0xb3, 0x95, 0x66, 0x28, 0x5b, 0x87, 0x77, 0x08, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x73, 0x72, 0x00, 0x12, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x72, 0x6d, 0x69,
	0x2e, 0x64, 0x67, 0x63, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0xb0, 0xb5, 0xe2, 0x66, 0x0c, 0x4a,
	0xdc, 0x34, 0x02, 0x00, 0x02, 0x4a, 0x00, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x00, 0x04,
	0x76, 0x6d, 0x69, 0x64, 0x74, 0x00, 0x13, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x72, 0x6d, 0x69,
	0x2f, 0x64, 0x67, 0x63, 0x2f, 0x56, 0x4d, 0x49, 0x44, 0x3b, 0x70, 0x78, 0x70, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x09, 0x27, 0xc0, 0x73, 0x72, 0x00, 0x11, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x72, 0x6d,
	0x69, 0x2e, 0x64, 0x67, 0x63, 0x2e, 0x56, 0x4d, 0x49, 0x44, 0xf8, 0x86, 0x5b, 0xaf, 0xa4, 0xa5,
	0x6d, 0xb6, 0x02, 0x00, 0x02, 0x5b, 0x00, 0x04, 0x61, 0x64, 0x64, 0x72, 0x74, 0x00, 0x02, 0x5b,
	0x42, 0x4c, 0x00, 0x03, 0x75, 0x69, 0x64, 0x71, 0x00, 0x7e, 0x00, 0x03, 0x70, 0x78, 0x70, 0x75,
	0x72, 0x00, 0x02, 0x5b, 0x42, 0xac, 0xf3, 0x17, 0xf8, 0x06, 0x08, 0x54, 0xe0, 0x02, 0x00, 0x00,
	0x70, 0x78, 0x70, 0x00, 0x00, 0x00, 0x08, 0x97, 0x16, 0x5c, 0xeb, 0x03, 0x2e, 0x28, 0xed, 0x73,
	0x71, 0x00, 0x7e, 0x00, 0x05, 0x80, 0x01, 0x00, 0x00, 0x01, 0x3e, 0x88, 0x8b, 0x08, 0x2c, 0x1b,
	0xba, 0x84, 0xdd
	
	}
	
	local opHash = { 0xf6, 0xb6, 0x89, 0x8d, 0x8b, 0xf2, 0x86, 0x43 }
	
	local obj = Stats()
	local payload_str = string.char(unpack(payload_arr))
	
	--print(payload_str)
	
	print('Request: ')
	local parse_status = sunrmi.parse_request(payload_str, obj)
	print('\tparse_status:', parse_status)
	assert(parse_status == 0, 'parse status = 0 means OK')
	print('\tkey value: ', HexDumpString(obj.operation_name))
	checkRequest(obj.operation_name, opHash)
	
end

function test2_sun_request()
	local payload_arr = {
	0x50, 0xac, 0xed, 0x00, 0x05, 0x77, 0x22, 0x0e, 0x6d, 0x8c, 0xd3, 0xca, 0x2e, 0xa5, 0x2a, 0x66,
	0x28, 0x5b, 0x87, 0x00, 0x00, 0x01, 0x3e, 0x88, 0x88, 0xb3, 0x95, 0x80, 0x02, 0xff, 0xff, 0xff,
	0xff, 0x52, 0x93, 0x0a, 0x9a, 0x0b, 0x99, 0x73, 0xa8
	}
	
	local opHash = { 0x52, 0x93, 0x0a, 0x9a, 0x0b, 0x99, 0x73, 0xa8 }
	
	local obj = Stats()
	local payload_str = string.char(unpack(payload_arr))
	
	--print(payload_str)
	
	print('Request: ')
	local parse_status = sunrmi.parse_request(payload_str, obj)
	print('\tparse_status:', parse_status)
	assert(parse_status == 0, 'parse status = 0 means OK')
	print('\tkey value: ', HexDumpString(obj.operation_name))
	checkRequest(obj.operation_name, opHash)
	
end

function test1_sun_response()
	local payload_arr = {
	0x51, 0xac, 0xed, 0x00, 0x05, 0x77, 0x0f, 0x01, 0x66, 0x28, 0x5b, 0x87, 0x00, 0x00, 0x01, 0x3e,
	0x88, 0x88, 0xb3, 0x95, 0x80, 0x13, 0x74, 0x00, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67
	}
	
	local obj = Stats()
	local payload_str = string.char(unpack(payload_arr))
	
	print('Response: ')
	local parse_status = sunrmi.parse_response(payload_str, obj)
	
	print('\tparse_status:', parse_status)
	assert(parse_status == 0, 'parse status = 0 means OK')
	
	print('\tappl_errors:', obj.appl_errors[1])
end

--exception
function test2_sun_response()
	local payload_arr = {
	0x51, 0xac, 0xed, 0x00, 0x05, 0x77, 0x0f, 0x02, 0xec, 0x41, 0xc8, 0xd4, 0x00, 0x00, 0x01, 0x3e, 
	0xcc, 0x7f, 0x9e, 0x29, 0x80, 0x0b, 0x73, 0x72, 0x00, 0x18, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x72, 
	0x6d, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 
	0x6f, 0x6e, 0xbd, 0xb8, 0xc9, 0xfd, 0xc1, 0x27, 0x90, 0x06, 0x02, 0x00, 0x00, 0x70, 0x78, 0x72, 
	0x00, 0x18, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x72, 0x6d, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 
	0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0xb8, 0x8c, 0x9d, 0x4e, 0xde, 0xe4, 
	0x7a, 0x22, 0x02, 0x00, 0x01, 0x4c, 0x00, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x74, 0x00, 
	0x15, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x54, 0x68, 0x72, 0x6f, 
	0x77, 0x61, 0x62, 0x6c, 0x65, 0x3b, 0x70, 0x78, 0x72, 0x00, 0x13, 0x6a, 0x61, 0x76, 0x61, 0x2e, 
	0x69, 0x6f, 0x2e, 0x49, 0x4f, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x6c, 0x80, 
	0x73, 0x64, 0x65, 0x25, 0xf0, 0xab, 0x02, 0x00, 0x00, 0x70, 0x78, 0x72, 0x00, 0x13, 0x6a, 0x61, 
	0x76, 0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 
	0x6e, 0xd0, 0xfd, 0x1f, 0x3e, 0x1a, 0x3b, 0x1c, 0xc4, 0x02, 0x00, 0x00, 0x70, 0x78, 0x72, 0x00, 
	0x13, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x54, 0x68, 0x72, 0x6f, 0x77, 
	0x61, 0x62, 0x6c, 0x65, 0xd5, 0xc6, 0x35, 0x27, 0x39, 0x77, 0xb8, 0xcb, 0x03, 0x00, 0x04, 0x4c, 
	0x00, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x71, 0x00, 0x7e, 0x00, 0x02, 0x4c, 0x00, 0x0d, 0x64, 
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x74, 0x00, 0x12, 0x4c, 
	0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 
	0x3b, 0x5b, 0x00, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x74, 0x00, 
	0x1e, 0x5b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x53, 0x74, 0x61, 
	0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3b, 0x4c, 
	0x00, 0x14, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x45, 0x78, 0x63, 0x65, 
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x74, 0x00, 0x10, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x75, 
	0x74, 0x69, 0x6c, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x3b, 0x70, 0x78, 0x70, 0x70, 0x74, 0x00, 0x29, 
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
	0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x72, 0x76, 
	0x65, 0x72, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x75, 0x72, 0x00, 0x1e, 0x5b, 0x4c, 0x6a, 
	0x61, 0x76, 0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 
	0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3b, 0x02, 0x46, 0x2a, 0x3c, 0x3c, 
	0xfd, 0x22, 0x39, 0x02, 0x00, 0x00, 0x70, 0x78, 0x70, 0x00, 0x00, 0x00, 0x0b, 0x73, 0x72, 0x00, 
	0x1b, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 
	0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x09, 0xc5, 0x9a, 
	0x26, 0x36, 0xdd, 0x85, 0x02, 0x00, 0x04, 0x49, 0x00, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x00, 0x0e, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x69, 0x6e, 0x67, 
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x06, 0x4c, 0x00, 0x08, 0x66, 0x69, 0x6c, 
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x71, 0x00, 0x7e, 0x00, 0x06, 0x4c, 0x00, 0x0a, 0x6d, 0x65, 0x74, 
	0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x71, 0x00, 0x7e, 0x00, 0x06, 0x70, 0x78, 0x70, 0x00, 
	0x00, 0x01, 0x61, 0x74, 0x00, 0x1f, 0x73, 0x75, 0x6e, 0x2e, 0x72, 0x6d, 0x69, 0x2e, 0x73, 0x65, 
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 
	0x65, 0x72, 0x52, 0x65, 0x66, 0x74, 0x00, 0x15, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x53, 
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x66, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x74, 0x00, 0x08, 
	0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 
	0x00, 0xb1, 0x74, 0x00, 0x1d, 0x73, 0x75, 0x6e, 0x2e, 0x72, 0x6d, 0x69, 0x2e, 0x74, 0x72, 0x61, 
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 
	0x24, 0x31, 0x74, 0x00, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6a, 
	0x61, 0x76, 0x61, 0x74, 0x00, 0x03, 0x72, 0x75, 0x6e, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 
	0x00, 0x00, 0xae, 0x71, 0x00, 0x7e, 0x00, 0x13, 0x71, 0x00, 0x7e, 0x00, 0x14, 0x71, 0x00, 0x7e, 
	0x00, 0x15, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0xff, 0xff, 0xff, 0xfe, 0x74, 0x00, 0x1e, 0x6a, 
	0x61, 0x76, 0x61, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x63, 
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x74, 0x00, 0x15, 
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 
	0x2e, 0x6a, 0x61, 0x76, 0x61, 0x74, 0x00, 0x0c, 0x64, 0x6f, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 
	0x65, 0x67, 0x65, 0x64, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xad, 0x74, 0x00, 
	0x1b, 0x73, 0x75, 0x6e, 0x2e, 0x72, 0x6d, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 
	0x72, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x71, 0x00, 0x7e, 0x00, 
	0x14, 0x74, 0x00, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 
	0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x02, 0x29, 0x74, 0x00, 0x22, 0x73, 0x75, 0x6e, 0x2e, 
	0x72, 0x6d, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x63, 
	0x70, 0x2e, 0x54, 0x43, 0x50, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x74, 0x00, 
	0x11, 0x54, 0x43, 0x50, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6a, 0x61, 
	0x76, 0x61, 0x74, 0x00, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 
	0x67, 0x65, 0x73, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x03, 0x28, 0x74, 0x00, 0x34, 
	0x73, 0x75, 0x6e, 0x2e, 0x72, 0x6d, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 
	0x74, 0x2e, 0x74, 0x63, 0x70, 0x2e, 0x54, 0x43, 0x50, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 
	0x72, 0x74, 0x24, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 
	0x64, 0x6c, 0x65, 0x72, 0x71, 0x00, 0x7e, 0x00, 0x20, 0x74, 0x00, 0x04, 0x72, 0x75, 0x6e, 0x30, 
	0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x02, 0x9b, 0x71, 0x00, 0x7e, 0x00, 0x23, 0x71, 
	0x00, 0x7e, 0x00, 0x20, 0x71, 0x00, 0x7e, 0x00, 0x15, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 
	0x00, 0x04, 0x79, 0x74, 0x00, 0x27, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 
	0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 
	0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x74, 0x00, 0x17, 
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 
	0x6f, 0x72, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x74, 0x00, 0x09, 0x72, 0x75, 0x6e, 0x57, 0x6f, 0x72, 
	0x6b, 0x65, 0x72, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x02, 0x67, 0x74, 0x00, 0x2e, 
	0x6a, 0x61, 0x76, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x24, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x71, 0x00,
	0x7e, 0x00, 0x28, 0x71, 0x00, 0x7e, 0x00, 0x15, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00,
	0x02, 0xd2, 0x74, 0x00, 0x10, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x74, 0x00, 0x0b, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x6a,
	0x61, 0x76, 0x61, 0x71, 0x00, 0x7e, 0x00, 0x15, 0x73, 0x72, 0x00, 0x26, 0x6a, 0x61, 0x76, 0x61,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x24, 0x55, 0x6e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0xfc, 0x0f, 0x25, 0x31, 0xb5, 0xec, 0x8e, 0x10, 0x02, 0x00, 0x01, 0x4c, 0x00, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x71, 0x00, 0x7e, 0x00, 0x08, 0x70, 0x78, 0x72, 0x00, 0x2c, 0x6a, 0x61,
	0x76, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x24, 0x55, 0x6e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x19, 0x42, 0x00, 0x80, 0xcb, 0x5e,
	0xf7, 0x1e, 0x02, 0x00, 0x01, 0x4c, 0x00, 0x01, 0x63, 0x74, 0x00, 0x16, 0x4c, 0x6a, 0x61, 0x76,
	0x61, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x3b, 0x70, 0x78, 0x70, 0x73, 0x72, 0x00, 0x13, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x78, 0x81, 0xd2, 0x1d,
	0x99, 0xc7, 0x61, 0x9d, 0x03, 0x00, 0x01, 0x49, 0x00, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x70, 0x78,
	0x70, 0x00, 0x00, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78, 0x71, 0x00, 0x7e, 0x00,
	0x34, 0x78, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x01, 0x70, 0x70, 0x75, 0x71, 0x00, 0x7e, 0x00, 0x0b,
	0x00, 0x00, 0x00, 0x10, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x3e, 0x74, 0x00,
	0x0f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x49, 0x6d, 0x70, 0x6c,
	0x74, 0x00, 0x0e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x49, 0x6d, 0x70, 0x6c, 0x2e, 0x6a, 0x61, 0x76,
	0x61, 0x74, 0x00, 0x0c, 0x67, 0x65, 0x74, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0xff, 0xff, 0xff, 0xfe, 0x74, 0x00, 0x24, 0x73, 0x75, 0x6e,
	0x2e, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x6d, 0x70,
	0x6c, 0x74, 0x00, 0x1d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x6d, 0x70, 0x6c, 0x2e, 0x6a, 0x61, 0x76,
	0x61, 0x74, 0x00, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x30, 0x73, 0x71, 0x00, 0x7e, 0x00,
	0x0d, 0x00, 0x00, 0x00, 0x39, 0x71, 0x00, 0x7e, 0x00, 0x3c, 0x71, 0x00, 0x7e, 0x00, 0x3d, 0x74,
	0x00, 0x06, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00,
	0x00, 0x2b, 0x74, 0x00, 0x28, 0x73, 0x75, 0x6e, 0x2e, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x6d, 0x70, 0x6c, 0x74, 0x00, 0x21,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x6d, 0x70, 0x6c, 0x2e, 0x6a, 0x61, 0x76,
	0x61, 0x71, 0x00, 0x7e, 0x00, 0x40, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x02, 0x59,
	0x74, 0x00, 0x18, 0x6a, 0x61, 0x76, 0x61, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x72, 0x65, 0x66,
	0x6c, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x74, 0x00, 0x0b, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x71, 0x00, 0x7e, 0x00, 0x40, 0x73, 0x71,
	0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x01, 0x42, 0x71, 0x00, 0x7e, 0x00, 0x0f, 0x71, 0x00, 0x7e,
	0x00, 0x10, 0x71, 0x00, 0x7e, 0x00, 0x11, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x00,
	0xb1, 0x71, 0x00, 0x7e, 0x00, 0x13, 0x71, 0x00, 0x7e, 0x00, 0x14, 0x71, 0x00, 0x7e, 0x00, 0x15,
	0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xae, 0x71, 0x00, 0x7e, 0x00, 0x13, 0x71,
	0x00, 0x7e, 0x00, 0x14, 0x71, 0x00, 0x7e, 0x00, 0x15, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0xff,
	0xff, 0xff, 0xfe, 0x71, 0x00, 0x7e, 0x00, 0x18, 0x71, 0x00, 0x7e, 0x00, 0x19, 0x71, 0x00, 0x7e,
	0x00, 0x1a, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xad, 0x71, 0x00, 0x7e, 0x00,
	0x1c, 0x71, 0x00, 0x7e, 0x00, 0x14, 0x71, 0x00, 0x7e, 0x00, 0x1d, 0x73, 0x71, 0x00, 0x7e, 0x00,
	0x0d, 0x00, 0x00, 0x02, 0x29, 0x71, 0x00, 0x7e, 0x00, 0x1f, 0x71, 0x00, 0x7e, 0x00, 0x20, 0x71,
	0x00, 0x7e, 0x00, 0x21, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x03, 0x28, 0x71, 0x00,
	0x7e, 0x00, 0x23, 0x71, 0x00, 0x7e, 0x00, 0x20, 0x71, 0x00, 0x7e, 0x00, 0x24, 0x73, 0x71, 0x00,
	0x7e, 0x00, 0x0d, 0x00, 0x00, 0x02, 0x9b, 0x71, 0x00, 0x7e, 0x00, 0x23, 0x71, 0x00, 0x7e, 0x00,
	0x20, 0x71, 0x00, 0x7e, 0x00, 0x15, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x04, 0x79,
	0x71, 0x00, 0x7e, 0x00, 0x27, 0x71, 0x00, 0x7e, 0x00, 0x28, 0x71, 0x00, 0x7e, 0x00, 0x29, 0x73,
	0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00, 0x02, 0x67, 0x71, 0x00, 0x7e, 0x00, 0x2b, 0x71, 0x00,
	0x7e, 0x00, 0x28, 0x71, 0x00, 0x7e, 0x00, 0x15, 0x73, 0x71, 0x00, 0x7e, 0x00, 0x0d, 0x00, 0x00,
	0x02, 0xd2, 0x71, 0x00, 0x7e, 0x00, 0x2d, 0x71, 0x00, 0x7e, 0x00, 0x2e, 0x71, 0x00, 0x7e, 0x00,
	0x15, 0x71, 0x00, 0x7e, 0x00, 0x32, 0x78, 0x70
	}
	
	local obj = Stats()
	local payload_str = string.char(unpack(payload_arr))
	
	print('Response: ')
	local parse_status = sunrmi.parse_response(payload_str, obj)
	
	print('\tparse_status:', parse_status)
	assert(parse_status == 0, 'parse status = 0 means OK')
	
	print('\tappl_errors:', obj.appl_errors[1])
	
end

